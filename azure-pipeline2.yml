trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    pip install pytest
    pip install pytest-html
    pip install requests  # Added requests module installation
  displayName: 'Install dependencies'

- script: |
    pytest test/ccportal_api_automation.py --html=report.html
  displayName: 'Run pytest and generate HTML report'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '*.css'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TEST-*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'report.html'
    artifactName: 'TestReport'

- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      import smtplib
      from email.mime.multipart import MIMEMultipart
      from email.mime.text import MIMEText
      from email.mime.base import MIMEBase
      from email import encoders
      
      # Email configuration
      smtp_server = 'smtp.gmail.com'
      smtp_port = 587
      sender_email = 'susmit.surwade@blenheimchalcot.com'
      receiver_email = 'susmit.surwade@blenheimchalcot.com'
      password = 'qzod ltfm nmav tqvw'
      
      # Create a multipart message
      message = MIMEMultipart()
      message['From'] = sender_email
      message['To'] = receiver_email
      message['Subject'] = 'Test Report'
      
      # Email body
      body = 'Please find the attached pytest HTML report.'
      message.attach(MIMEText(body, 'plain'))
      
      # Attachment
      attachment_path = 'report.html'
      with open(attachment_path, 'rb') as attachment:
          part = MIMEBase('application', 'octet-stream')
          part.set_payload(attachment.read())
      encoders.encode_base64(part)
      part.add_header(
          'Content-Disposition',
          f'attachment; filename= {attachment_path.split("/")[-1]}'
      )
      message.attach(part)
      
      # Send email
      with smtplib.SMTP(smtp_server, smtp_port) as server:
          server.starttls()
          server.login(sender_email, password)
          server.sendmail(sender_email, receiver_email, message.as_string())
  displayName: 'Send Email with attached HTML report'
