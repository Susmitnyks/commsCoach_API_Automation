name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Chrome
        run: |
          sudo apt update
          sudo apt install -y wget
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -y -f

      - name: Install Allure
        run: |
          wget -O allure-2.15.0.tgz https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.15.0/allure-commandline-2.15.0.tgz
          tar -zxvf allure-2.15.0.tgz
          sudo mv allure-2.15.0/bin/allure /usr/local/bin/
          rm allure-2.15.0.tgz
          rm -rf allure-2.15.0

      - name: Set up Python 3.11.7
        uses: actions/setup-python@v3
        with:
          python-version: "3.11.7"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pytest selenium==4.17.0 allure-pytest allure-python-commons==2.13.2 deepeval telnetlib3

#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install pytest
          pip install allure-pytest
          pip install requests
          sudo apt-get update
          sudo apt-get install wget unzip -y
          wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.15.0/allure-commandline-2.15.0.zip -O allure.zip
          unzip allure.zip -d /opt

      - name: Run tests and generate Allure reports
        run: |
          pytest test/ccportal_api_automation.py --alluredir=../allure-results
#          /opt/allure-2.15.0/bin/allure generate ./allure-results --report -o ./allure-report

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allureresults

      - name: Publish test reports
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.Allure_auto }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Post the link to the reports
        if: always()
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.Allure_auto}}
          context: 'Test report'
          state: 'success'
          sha: ${{ github.sha }}
          target_url: https://Susmitnyks.github.io/commsCoach_API_Automation/${{ github.run_number }}/index.html


#      - name: Publish Allure report
#        uses: actions/upload-artifact@v2
#        with:
#          name: allure-report
#          path: ./allure-report
#      - name: Set directory permissions
#        run: chmod -R 755 /home/runner/work/commsCoach_API_Automation/commsCoach_API_Automation/allure-report/index.html
#
      - name: Send Email with attached Allure report
        run: |
          # SMTP configuration for Gmail
          $smtpServer = "smtp.gmail.com"
          $smtpPort = 587
          $from = "susmit.s.surwade@gmail.com"
          $to = @("susmit.surwade@blenheimchalcot.com, ramchandra.patil@blenheimchalcot.com")

          # Get today's date
          $todayDate = Get-Date -Format "dd-MM-yyyy"

          # Set the email subject
          $subject = "Daily Production API Automation report for $todayDate"

          # SMTP credentials
          $username = "susmit.s.surwade@gmail.com"
          $password = "qzod ltfm nmav tqvw"  # Specify your Gmail password here

          # Email body
          $emailBody = "Please find the attached Allure report for the pytest API execution."

          # Path to the Allure report
          $attachmentPath = "https://github.com/Susmitnyks/commsCoach_API_Automation/${{ github.run_number }}/index.html"

          # Send email with attached Allure report using TLS/SSL
          $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ($username, $securePassword)
          Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort -From $from -To $to -Subject $subject -Body $emailBody -Attachments $attachmentPath -Credential $credential -UseSsl
        shell: pwsh